;; compiles to: 919091586013018282029182048314905760006000fd5b90500460005260206000f3
;; test values: uncomment top 3 push instructions to test
;; use: `evm --debug run fmul.easm`
;; PUSH 1
;; PUSH 2
;; PUSH 1
PUSH 64
CALLDATALOAD
PUSH 32
CALLDATALOAD
PUSH 0
CALLDATALOAD
SWAP2
SWAP1
SWAP2
PC
PUSH 19
ADD
DUP3
DUP3
MUL
SWAP2
DUP3
DIV
DUP4
EQ
SWAP1
JUMPI
PUSH 0
PUSH 0
REVERT
JUMPDEST
SWAP1
POP
DIV
PUSH 0
MSTORE
PUSH 32
PUSH 0
RETURN

;; stack visualization
;; x y b
;; b y x
;; y b x
;; x b y
;; p x b y
;; s p x b y
;; j x b y
;; b j x b y
;; x b j x b y
;; a j x b y
;; x j a b y
;; a x j a b y
;; c j a b y
;; b c j a b y
;; e j a b y
;; j e a b y
;; a b y
;; b a y
;; a y
;; 0 r
;; <-- mstore clears stack
;; 32
;; 0 32
;; <-- returns

;; b == baseUnit
;; p == codepoint
;; j == jumpdest
;; a == mul(x, y)
;; c == div(a, y)
;; e == eq(c, x)
